#include "MyComplex.hpp"

MyComplex::MyComplex(double I, double R)
{
    Im = I;
    Re = R;
}
MyComplex::MyComplex(double R)
{
    Im = 0.0f;
    Re = R;
}

MyComplex MyComplex::Add(MyComplex a, MyComplex b)
{
    MyComplex Result;
    Result.Im = a.Im + b.Im;
    Result.Re = a.Re + b.Re;
    return Result;
}

MyComplex MyComplex::Sub(MyComplex a, MyComplex b)
{
    MyComplex Result;
    Result.Im = a.Im - b.Im;
    Result.Re = a.Re - b.Re;
    return Result;
}

MyComplex MyComplex::Mult(MyComplex a, MyComplex b)
{
    MyComplex Result;
    Result.Re = (b.Re*a.Re - a.Im*b.Im);
    Result.Im = (a.Re * b.Im + a.Im*b.Re);
    return Result;
}

MyComplex MyComplex::Div(MyComplex a, MyComplex b)
{
    float div = (b.Re*b.Re) + (b.Im*b.Im);
    MyComplex Result;
    Result.Re = (a.Re*b.Re)+(a.Im*b.Im);
    Result.Re /= div;
    Result.Im = (a.Im*b.Re)-(a.Re*b.Im);
    Result.Im /= div;
    return Result;
}
